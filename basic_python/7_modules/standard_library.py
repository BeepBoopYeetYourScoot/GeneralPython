# Питон даёт возможность импортировать как встроенные модули, так и созданные самим пользователем
# В случае, если необходимо импортировать кастомный модуль, нужно указать к нему путь или же
# поместить его в той же директории, где он используется

# Очень странно, что кастомный модуль подсвечен как ошибка, однако, импортируется нормально
import my_custom_module as mcm
import sys
import random
import math
import datetime
import calendar
import os

courses = ['History', 'Math', 'Physics', 'CompSci']

index = mcm.find_index(courses, 'Math')
print(index)

# Также существует возможность импортировать отдельные функции и свойства из модулей
# например: from my_custom_module import find_index
# или: from my_custom_module import test
# При данном способе импортируются только те свойства и методы модуля, которые мы указали,
# а доступ к остальному функционалу ограничен
# По сути, модули можно воспринимать как отдельные классы с набором свойств и методов.

# Из модуля можно импортировать все свойства и методы сразу с помощью знака *:
# from my_custom_module import *
# Однако, такой код не показывает, какие именно свойства и методы ты импортировал для работы,
# следовательно, он не объясняет сам себя (not self-explanatory)

# Познакомимся поближе с модулем sys и переменными PATH

print(sys.path)

# В Питоне существует стандартный модуль для работы со случайностями: random
# Попробуем его. Распечатаем случайный курс из нашего списка

random_course = random.choice(courses)

print(random_course)

# Существует модуль для работы с математическими выражениями: math

today = datetime.date.today()
print(today)
print(calendar.isleap(today.year))

# Рассмотрим модуль OS, который предоставляет доступ к установленной операционной системы

print(os.getcwd())  # CWD = Current Working Directory

# Все встроенные в Питон модули сами являются файлами, поэтому мы можем посмотреть, где
# находятся данные модули

print(os.__file__)  #




